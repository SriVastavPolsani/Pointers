// Pointer Types, pointer Arithmetic, void pointers program
#include <stdio.h>
int main()
{
    int a = 1025;
    int *p;
    p = &a;
    
    printf("size of int is : %d\n", sizeof(int) );
    printf("Address: %d , Value: %d \n", p, *p);
    printf("Address: %d , Value: %d \n", p+1, *(p+1));
    
    char *p0;
    p0=(char*)p;//typecasting
    
    printf("size of char is : %d\n", sizeof(char) );
    printf("Address: %d , Value: %d \n", p0, *p0);
    printf("Address: %d , Value: %d \n", p0+1, *(p0+1));
    //1025 = 00000000 00000000 00000100 00000001
    
    float *p1;
    p1=(float*)p;
    
    printf("size of float is : %d\n", sizeof(float) );
    printf("Address: %d , Value: %d \n", p1, *p1);
    printf("Address: %d , Value: %d \n", p1+1, *(p1+1));
    
    //Void pointer - Generic pointer
    
    void *p2;
    p2 = p;
    printf("size of void is : %d\n", sizeof(void) );
    printf("Address: %d ", p2); // Generic pointer cannot do dereferencing.
    
}
