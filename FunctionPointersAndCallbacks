// function pointers and callback function program
#include <iostream>
#include <string>
#include <stdlib.h>  // functionTo give us the qsort
void BubbleSort(int A[], int n, int (*Compare)(int, int)) //Passing ptr to func as parameter to a function.
{
    int temp;
    for(int i = 0; i<n; i++)
    {
        for(int j = 0; j<n-1; j++)
        {
            if(Compare(A[j], A[j+1]) > 0) //Callback to parameter function
            {
                temp = A[j];
                A[j] = A[j+1];
                A[j+1] = temp;
            }
        }
    }
}

int Compare(const void* a, const void* b) //Compare func for qsort. parameters are constant void ptrs.
{
int A = *((int*)a); //Typecast to int first and then dereference for value
int B = *((int*)b); //Typecast to int first and then dereference for value

return A-B; //Comparision value
}

int main()
{
    int A[] = {1,43,6,-435,2,78};
    int n= 6;
    //int (*Comp)(int, int);
    //Comp = Compare;
    //BubbleSort(A, n, Compare);
    qsort(A,6,sizeof(int),Compare); // qsort for stdlib to sort an array
    for(int i = 0; i< n ; i++)
    {
        printf ("%d ", A[i]); //sorted array
    }
}
