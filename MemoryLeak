// Virtual Casino program to understand memory leak
#include <iostream>
#include <string>
#include <stdlib.h>
#include<time.h>
int cash = 100;
void play(int bet)
{
    //char c[3] = {'J', 'Q', 'K'}; // memory allocation on stack. No chance of memory leak
    char *c = (char*)malloc(3*sizeof(char)); //Allocation on heap. chance for memory leak. If memory not freed once job is done.
    c[0] = 'J'; c[1] = 'Q' ;  c[2] = 'K';
    printf("Shuffling.......\n");
    srand(time(NULL)); //seeding the random number generator
    int i = 0;
    for(i =0; i< 5 ; i++)
    {
        int x = rand()%3;
        int y = rand()%3;
        
        int temp;
        temp = c[y];
        c[y] = c[x];
        c[x] = temp;
    }
    int playersGuess;
    printf("What is the Queens position?1,2 or 3 \n");
    scanf("%d", &playersGuess);
    
    if(c[playersGuess-1] == 'Q')
    {
        cash += bet*2;
        printf("You win. Result = \%c %c %c\ . Total cash = %d\n", &c[0], c[1], c[2], cash);
    }
    else 
    {
        cash -= bet;
        printf("You lose. Result = \%c %c %c\ . Total cash = %d\n", &c[0], c[1], c[2], cash);
    } 
    free(c);
}
int main()
{
    int bet;
    printf("Welcome to virtual Casino!!!");
    printf("Total cash: %d\n", &cash);
    while(cash>0)
    {
        printf("What is your bet?");
        scanf("%d", &bet);
        if(bet==0 || bet > cash)
        break;
        play(bet);
        printf("\n**************************\n");
    }
}
